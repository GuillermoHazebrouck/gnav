--------------------------------------------------------------------------------
-- UNIT_NAME: Maps
--
-- DESIGNER          : Guillermo HAZEBROUCK
--
-- CREATION_DATE     : 16 Aug 2020
--------------------------------------------------------------------------------





--******************************************************************************
--
--******************************************************************************
package Maps is

   type Position_Formats is (-- Variable lenght
                             -- 2 decimals after the second
                             -- Forward cardinal directions
                             -- <N,S>[G]G*MM*SS.DD <E,O>[GG]G*MM*SS.DD
                             Format_1,

                              -- Monospaced
                              -- 0 decimals
                              -- Trailing cardinal directions:
                              -- "GGMMSS<N,S> GGGMMSS<E,O>"
                              Format_2);

   --+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   --
   --+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   type Position_Record is record

      Lat : Long_Float;

      Lon : Long_Float;

   end record;

   function Lat_Image (Value : Position_Record; Format : Position_Formats := Format_1) return String;

   function Lon_Image (Value : Position_Record; Format : Position_Formats := Format_1) return String;

   function Image (Value : Position_Record; Format : Position_Formats := Format_1) return String;

   function Value (Image : String; Format : Position_Formats := Format_1) return Position_Record;

   --+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   --
   --+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   No_Position_Record : constant Position_Record := (0.0, 0.0);

   --+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   --
   --+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   type Vector_Record is record

      X : Float := 0.0;

      Y : Float := 0.0;

   end record;
   -----------------------------------------------------------------------------

   --+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   --
   --+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   No_Vector_Record : constant Vector_Record := (0.0, 0.0);

   --+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   --
   --+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   type Position_Record_Array is array (Positive range <>) of Position_Record;

   --+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   --
   --+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   subtype Point_Record is Vector_Record;

   --+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   --
   --+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   type Terrain_Modes is (Monochrome, Colormap);

   --+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   -- Represents a gliding range ceiling cone that can be used to intersect the
   -- terrain.
   --+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   type Range_Cone_Record is tagged record

      Active   : Boolean         := False;              -- active/inactive
      Center   : Position_Record := No_Position_Record; -- reference position
      Altitude : Float           := 1000.0;             -- reference altitude
      Airspeed : Float           := 30.0;               -- airspeed for minimum glide slope
      Slope    : Float           := 33.0;               -- minimum glide slope
      Wind     : Vector_Record   := No_Vector_Record;   -- reference wind
      Margin   : Float           := 200.0;              -- safety margin (gray zone)

   end record;

   --+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   -- Data used to represent the map
   -- Center : the intended screen center (geographic coordinates)
   -- Zoom   : the zoom level in number of degrees per pixel
   --+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   type Map_View_Record is tagged record

      Center : Position_Record := No_Position_Record;
      Zoom   : Float           := 0.0;
      Width  : Float           := 0.0;
      Height : Float           := 0.0;
      Zero   : Float           := 0.0;
      Mode   : Terrain_Modes   := Colormap;
      Cone   : Range_Cone_Record;

   end record;

   --===========================================================================
   --
   --===========================================================================
   function To_Screen_Coordinates (This : Map_View_Record; Position : Position_Record) return Point_Record;

   --===========================================================================
   --
   --===========================================================================
   function To_Map_Coordinates (This : Map_View_Record; Point : Point_Record) return Position_Record;

   --===========================================================================
   -- Returns the distance in kilometers.
   -- NOTE: the algorithm is simple and is only accurate for close points.
   --===========================================================================
   function Distance (Position_A, Position_B : Position_Record) return Float;

   --===========================================================================
   -- Returns the aproximate distance and bearing from point A to B.
   --===========================================================================
   procedure Vector (Position_A,
                     Position_B  : Position_Record;
                     Distance    : out Float;
                     Bearing     : out Float);

end Maps;
--------------------------------------------------------------------------------
