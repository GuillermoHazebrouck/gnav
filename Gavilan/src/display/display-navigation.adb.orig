--------------------------------------------------------------------------------
-- LIBRARY_UNIT_NAME : Display.Navigation
--
-- DESIGNER          : Guillermo HAZEBROUCK
--
-- CREATION_DATE     : 16 Aug 2020
--------------------------------------------------------------------------------
--External
with Ada.Text_IO;
--Local
with Gl.Fonts;
with Maps;
use  Maps;
with Maps.Terrain;
with Utility.Colors;
use  Utility.Colors;
with Utility.Strings;
with Widgets.Widget;
use  Widgets.Widget;
with Widgets.Button;
use  Widgets.Button;




--******************************************************************************
--
--******************************************************************************
package body Display.Navigation is
   
   -- Main menu buttons
   ---------------------------------
   Btn_Zoom_In  : Button_Record;
     
   Btn_Zoom_Out : Button_Record;
   
   Btn_Center   : Button_Record;
   
   Btn_Left     : Button_Record;
   
   Btn_Right    : Button_Record;
   
   Btn_Down     : Button_Record;
   
   Btn_Up       : Button_Record;
   
   Btn_Color    : Button_Record;
   
   Pressing     : Boolean := False;
   
   View         : Maps.Terrain.Terrain_View_Record;
   
   -- Fonts
   ---------------------------------
   Font_1 : Gl.Fonts.Font_Style_Record := (Width     => 0.020, 
                                           Height    => 0.030, 
                                           Space     => 0.008,
                                           Rendering => Gl.Fonts.Font_Glow,
                                           Line_R    => 1.0,
                                           Line_G    => 1.0,
                                           Line_B    => 1.0,
                                           Glow_R    => 0.1,
                                           Glow_G    => 0.1,
                                           Glow_B    => 0.1);
   
   -- Fonts
   ---------------------------------
   Font_2 : Gl.Fonts.Font_Style_Record := (Width     => 0.030, 
                                           Height    => 0.040, 
                                           Space     => 0.012,
                                           Rendering => Gl.Fonts.Font_Glow,
                                           Line_R    => 0.0,
                                           Line_G    => 1.0,
                                           Line_B    => 1.0,
                                           Glow_R    => 0.1,
                                           Glow_G    => 0.1,
                                           Glow_B    => 0.8);
            
   --===========================================================================
   --
   --===========================================================================
   procedure Init is
        
      M : constant Dimension_Float := 0.01;
      H : constant Dimension_Float := 0.06;
      W : constant Dimension_Float := 0.08;
      
      Allocation : Allocation_Record;
      
   begin

      Allocation.H := H;
      
      Allocation.W := W;
                            
      -- Down button
      ------------------------------------------------------
      
      Allocation.X := 1.0 - 2.0 * (M + W);
      
      Allocation.Y := M;
      
      Btn_Down.Set_Label ("D");
      
      Btn_Down.Set_Allocation (Allocation);
      
      Btn_Down.Set_Label_Color (Color_White);
      
      Btn_Down.Set_Font_Size (0.6);
                   
      -- Up button
      ------------------------------------------------------
      
      Allocation.Y := 3.0 * M + 2.0 * H;
      
      Btn_Up.Set_Label ("U");
      
      Btn_Up.Set_Allocation (Allocation);
      
      Btn_Up.Set_Label_Color (Color_White);
      
      Btn_Up.Set_Font_Size (0.6);
               
      -- Center button
      ------------------------------------------------------
      
      Allocation.Y := 2.0 * M + H;
      
      Btn_Center.Set_Label ("O");
      
      Btn_Center.Set_Allocation (Allocation);
      
      Btn_Center.Set_Label_Color (Color_White);
      
      Btn_Center.Set_Font_Size (0.6);
                               
      -- Right button
      ------------------------------------------------------
      
      Allocation.X := 1.0 - (M + W);
      
      Btn_Right.Set_Label ("R");
      
      Btn_Right.Set_Allocation (Allocation);
      
      Btn_Right.Set_Label_Color (Color_White);
      
      Btn_Right.Set_Font_Size (0.6);
                                  
      -- Left button
      ------------------------------------------------------
      
      Allocation.X := 1.0 - 3.0 * (M + W);
      
      Btn_Left.Set_Label ("L");
      
      Btn_Left.Set_Allocation (Allocation);
      
      Btn_Left.Set_Label_Color (Color_White);
      
      Btn_Left.Set_Font_Size (0.6);
            
      -- Zoom out button
      ------------------------------------------------------         
      Allocation.X := M;
      
      Allocation.H := H;
      
      Allocation.Y := M;
      
      Allocation.W := W;
           
      Btn_Zoom_Out.Set_Label ("-");
      
      Btn_Zoom_Out.Set_Allocation (Allocation);
      
      Btn_Zoom_Out.Set_Label_Color (Color_White);
      
      Btn_Zoom_Out.Set_Font_Size (0.6);
                       
      -- Zoom in button
      ------------------------------------------------------
      Btn_Zoom_In.Set_Label ("+");
      
      Allocation.Y := H + 2.0 * M;
      
      Btn_Zoom_In.Set_Allocation (Allocation);
      
      Btn_Zoom_In.Set_Label_Color (Color_White);
      
      Btn_Zoom_In.Set_Font_Size (0.6);
                    
      -- Terrain color button
      ------------------------------------------------------         
      Allocation.X := 2.0 * M + W;
      
      Allocation.H := H;
      
      Allocation.Y := M;
      
      Allocation.W := W;
           
      Btn_Color.Set_Label ("C");
      
      Btn_Color.Set_Allocation (Allocation);
      
      Btn_Color.Set_Label_Color (Color_White);
      
      Btn_Color.Set_Font_Size (0.6);
            
      -- Terrain data
      ------------------------------------------------------
      Maps.Terrain.Auto_Load ("terrain");
      
      View.Center := Maps.Terrain.Get_Middle;
      
      View.Zoom   := 0.004;
      
   end Init;
   -----------------------------------------------------------------------------
   
   
   
      
   --===========================================================================
   --
   --===========================================================================
   procedure Draw (Width, Height : Float) is
      
      --------------------------------------------------------------------------
      function Lat_Lon_String (Value : Float) return String is
      begin
         return
           Utility.Strings.Trim (Integer'Image (Integer (abs Float'Truncation (Value)))) & "*" &
           Utility.Strings.Trim (Integer'Image (Integer (60.0 * (Value - Float'Truncation (Value)))));    
      end Lat_Lon_String;
      --------------------------------------------------------------------------
      
      --------------------------------------------------------------------------
      function Lat_String (Value : Float) return String is
      begin
         if Value < 0.0 then 
            return "S";
         else
            return "N";
         end if;
      end Lat_String;
      --------------------------------------------------------------------------
                  
      --------------------------------------------------------------------------
      function Lon_String (Value : Float) return String is
      begin
         if Value < 0.0 then 
            return "W";
         else
            return "E";
         end if;
      end Lon_String;
      --------------------------------------------------------------------------
      
   begin
      
      View.Height := Height;
      
      View.Width  := Width;
      
      Maps.Terrain.Draw_Map (View);
      
      Gl.Fonts.Draw (Lat_String (View.Center.Lat), 
                     0.780, 
                     0.940,
                     Font_1);
      
      Gl.Fonts.Draw (Lat_Lon_String (View.Center.Lat), 
                     0.780, 
                     0.880,
                     Font_2);
      
      Gl.Fonts.Draw (Lon_String (View.Center.Lon), 
                     0.780, 
                     0.820,
                     Font_1);
      
      Gl.Fonts.Draw (Lat_Lon_String (View.Center.Lon), 
                     0.780, 
                     0.760,
                     Font_2);
      
      Gl.Fonts.Draw ("ELV", 
                     0.780, 
                     0.700,
                     Font_1);
      
      Gl.Fonts.Draw ("802", 
                     0.780, 
                     0.640,
                     Font_2);
      
      Btn_Down.Draw;
      
      Btn_Center.Draw;
      
      Btn_Up.Draw;
      
      Btn_Left.Draw;
      
      Btn_Right.Draw;
      
      Btn_Zoom_In.Draw;
      
      Btn_Zoom_Out.Draw;
      
      Btn_Color.Draw;
      
   end Draw;
   -----------------------------------------------------------------------------
      



   --===========================================================================
   --
   --===========================================================================
   procedure Press (X, Y : Float) is
      
      use Maps.Terrain;
      
      Changed : Boolean := True; 
      
   begin
      
      if Btn_Center.Contains (X, Y) then
         
         View.Center := Terrain.Get_Middle;
         
         View.Zoom := 0.006;
         
         Ada.Text_IO.Put_Line ("Map center");
                  
      elsif Btn_Zoom_In.Contains (X, Y) then
         
         View.Zoom := Float'Max (0.0002, View.Zoom - 0.0002);
         
         Ada.Text_IO.Put_Line ("Zoom in");
         
      elsif Btn_Zoom_Out.Contains (X, Y) then
         
         View.Zoom := Float'Min (0.006, View.Zoom + 0.0002);
         
         Ada.Text_IO.Put_Line ("Zoom out");
         
      elsif Btn_Right.Contains (X, Y) then
         
         View.Center.Lon := View.Center.Lon + 0.2 * View.Zoom * View.Width;
         
         Ada.Text_IO.Put_Line ("Map right");
         
      elsif Btn_Left.Contains (X, Y) then
         
         View.Center.Lon := View.Center.Lon - 0.2 * View.Zoom * View.Width;
         
         Ada.Text_IO.Put_Line ("Map left");
         
      elsif Btn_Up.Contains (X, Y) then
         
         View.Center.Lat := View.Center.Lat + 0.2 * View.Zoom * View.Height;
         
         Ada.Text_IO.Put_Line ("Map up");
         
      elsif Btn_Down.Contains (X, Y) then
         
         View.Center.Lat := View.Center.Lat - 0.2 * View.Zoom * View.Height;
         
         Ada.Text_IO.Put_Line ("Map down");
         
      elsif Btn_Color.Contains (X, Y) then
         
         if View.Mode = Monochrome then
            
            View.Mode := Colormap;
            
         else            
            View.Mode := Monochrome;
            
         end if;
         
      else
             
         Changed := False;
         
         Pressing := True;
      
      end if;
      
      if Changed then 
         
         Display.Refresh := True;
      
      end if;
               
   end Press;
   -----------------------------------------------------------------------------
         



   --===========================================================================
   --
   --===========================================================================
   procedure Drag (X, Y : Float) is
   begin

      null;
      
   end Drag;
   -----------------------------------------------------------------------------
   
end Display.Navigation;
--------------------------------------------------------------------------------
